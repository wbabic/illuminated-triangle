* Introduction to sketching
  Sketching with css and clojure ... in the canvas
  making geometrical objects
  with visual representation and
  represented by data
  
** a five hundred square pixel canvas
   screen coordinates
   bit map

   represent as a matrix in core.matrix
   
** create geometric data with your fingers
   mouse move click
   touch tap drag

   key press
   
** finger painting with geometric objects
   point line circle triangle
   with effects and guides
   in color and time
   
** make triangles
   create point triples
   each point with a pair of coordinates

** transform triangles
   create transforms and
   apply them to triangles

   compose transforms
   apply a sequence of transforms to a triangle
   one at a time
   all at once
   
** transformation
   transformation
   a one-to-one correspondence
   P -> P'
   amoung all points in the plane (or space)

   a rule for associating points
   each pair has a first point P and a second member P'
   every point occurs as the first member of just one pair

   when P' coincides with P we have what is called an invariant point

   product of transformations
   identiy and inverse

*** isometry
    a congruent transformation
    from Coxeter
    
    a length preserving transformation
    if (P, P') and (Q, Q') are two pairs of corresponding points then
    PQ = P'Q'
    that is, PQ and P'Q' are congruent segments

    rotation
    about a point in the plane, a line in space
    has an invariant point or invariant line

    halfturn
    rotation by 180 degrees
    involution
   
    translation
    or parallel displacement
    does not have an invariant point

    reflection
    invariant mirror line or plane in 2d 3d
   
**** 2.31 an isometry with 2 invariant points (or more)
     If an isometry has more than one invariant point, it must be
     either the identity or a reflection

***** proof
      Let A and B be two invariant points, and P be any point not on AB

      Let P' be the image of P by an isometry, then we know
      AP = AP' and BP = BP'

      intersection of two circles
      center at A radius AP
      center at B radius BP
      when P is not on AB
      has two points

      it would have just one point if P were on AB
      a tangent point
      
**** reflection in a line
    fix a line by choosing two points A and B
    vary P and see the image P' under
    the reflection in line AB

    #+BEGIN_SRC clojure
      (ns triangulator.reflection
        (:require [triangulator.complex :as c]))
      
      (let [[A B] [[0 0] [0 1]]
            ref (reflection A B)
            pre-image [[1 0] [1 1] [0 1] [0 0]]
            image (map ref pre-image)]
        (zipmap pre-image image))
    #+END_SRC

*** similarity
    dilatation (or homothety)
    transforms each line into a parallel line
    given two parallel lines 
    there exists a unique dilatation relating them
    find it

    includes halfturns and translations as special cases

    O(lambda)
    center O
    factor (or power) lambda 

    O(k)

**** center of similtude
     of two circles
     distinct centers
     unequal radii
     
** nine point circle
   G(-1/2)
   H(1/2)
   
** inversion in a circle
   fixed circle
   let point vary
   see its image
   see images of lines and circles

   see the image of an arbitrary triangle

   see the image of a triangle
   in its own circumcircle
   
** symmetry
*** symmetry of a triangle
    one line of reflection in the plane
    isosceles

    three lines of reflection
    equilateral

    reflection along edge
    altitude base point
    line through vertex
    perpendicular to opposite edge

*** regular polygon
    the dihedral group
*** star polygon
    notation from Coxeter
    
*** regular polyhedron
    platonic solids
    archimedan solids
    cylinders prisms and antiprisms
    
