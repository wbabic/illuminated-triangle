// Compiled by ClojureScript 0.0-2202
goog.provide('triangulator.definitions');
goog.require('cljs.core');
triangulator.definitions.geometric_objects = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"point","point",1120749826),new cljs.core.Keyword(null,"label","label",1116631654),"point"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"label","label",1116631654),"line"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"triangle","triangle",2511666554),new cljs.core.Keyword(null,"label","label",1116631654),"triangle"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"circle","circle",3948654658),new cljs.core.Keyword(null,"label","label",1116631654),"circle"], null)], null);
triangulator.definitions.geometric_concepts = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"midpoint","midpoint",3670036410),new cljs.core.Keyword(null,"label","label",1116631654),"midpoint"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"perp-bisector","perp-bisector",4789204857),new cljs.core.Keyword(null,"label","label",1116631654),"perpendicualr bisector"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"ang-bisector","ang-bisector",3140764786),new cljs.core.Keyword(null,"label","label",1116631654),"angular bisector"], null)], null);
triangulator.definitions.special_triangles = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"eq-tri","eq-tri",4011262076),new cljs.core.Keyword(null,"label","label",1116631654),"equilateral"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"right","right",1122416014),new cljs.core.Keyword(null,"label","label",1116631654),"right"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"isosc","isosc",1114410247),new cljs.core.Keyword(null,"label","label",1116631654),"isosceles"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"golden","golden",4068534395),new cljs.core.Keyword(null,"label","label",1116631654),"golden"], null)], null);
triangulator.definitions.triangle_properties = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"median","median",4230840444),new cljs.core.Keyword(null,"label","label",1116631654),"centroid"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"circumcircle","circumcircle",4663541489),new cljs.core.Keyword(null,"label","label",1116631654),"circumcircle"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"altitude","altitude",3050454548),new cljs.core.Keyword(null,"label","label",1116631654),"orthocenter"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"incircle","incircle",1101303207),new cljs.core.Keyword(null,"label","label",1116631654),"incircle and excircles"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"euler-line","euler-line",3619219274),new cljs.core.Keyword(null,"label","label",1116631654),"euler line"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"nine-pt-circle","nine-pt-circle",4400858320),new cljs.core.Keyword(null,"label","label",1116631654),"nine point circle"], null)], null);
triangulator.definitions.triangle_transformations = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"reflection","reflection",3942571933),new cljs.core.Keyword(null,"label","label",1116631654),"reflection"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"translation","translation",3468224035),new cljs.core.Keyword(null,"label","label",1116631654),"translation"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"rotation","rotation",973603568),new cljs.core.Keyword(null,"label","label",1116631654),"rotation"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"homothety","homothety",3437436639),new cljs.core.Keyword(null,"label","label",1116631654),"homothety"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"inversion","inversion",3291930501),new cljs.core.Keyword(null,"label","label",1116631654),"inversion"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),new cljs.core.Keyword(null,"mobius","mobius",4240016697),new cljs.core.Keyword(null,"label","label",1116631654),"mobius"], null)], null);
triangulator.definitions.transformation_header = "Transform a triangle. First create a transform then create a triangle and see its image under the transformation.";
triangulator.definitions.ui = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"section-name","section-name",1618057189),"Triangular Properties",new cljs.core.Keyword(null,"data","data",1016980252),triangulator.definitions.triangle_properties], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"section-name","section-name",1618057189),"Transform a Triangle",new cljs.core.Keyword(null,"data","data",1016980252),triangulator.definitions.triangle_transformations,new cljs.core.Keyword(null,"header","header",4087600639),triangulator.definitions.transformation_header], null)], null);
triangulator.definitions.definition_text = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"circumcircle","circumcircle",4663541489),new cljs.core.Keyword(null,"reflection","reflection",3942571933),new cljs.core.Keyword(null,"point","point",1120749826),new cljs.core.Keyword(null,"nine-pt-circle","nine-pt-circle",4400858320),new cljs.core.Keyword(null,"inversion","inversion",3291930501),new cljs.core.Keyword(null,"median","median",4230840444),new cljs.core.Keyword(null,"incircle","incircle",1101303207),new cljs.core.Keyword(null,"triangle","triangle",2511666554),new cljs.core.Keyword(null,"translation","translation",3468224035),new cljs.core.Keyword(null,"euler-line","euler-line",3619219274),new cljs.core.Keyword(null,"homothety","homothety",3437436639),new cljs.core.Keyword(null,"ang-bisector","ang-bisector",3140764786),new cljs.core.Keyword(null,"circle","circle",3948654658),new cljs.core.Keyword(null,"perp-bisector","perp-bisector",4789204857),new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"midpoint","midpoint",3670036410),new cljs.core.Keyword(null,"altitude","altitude",3050454548),new cljs.core.Keyword(null,"rotation","rotation",973603568)],[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Circumcircle perspective","Two taps to fix an edge with perpendicular bisector. Then see triangle with perpendicular bisectors, circumcenter (intersection of perpendicular bisectors) and circumcircle."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Reflection in a line of symmetry.","Two taps to create a line of symmetry. Then see the image of the reflection in that line, of a point, a line and a triangle. Move mouse to see image move. Tap once to fix a point, twice to fix a line. Once line is fixed, moving mouse creates triangles and their images. Additional tap will reset."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Point","A point represented by a vector of two coordinates. Move around in the canvas and see the canvas coordinates. Click to add  points."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Nine point circle of a triangle","The circumcircle of the orthic triangle of the feet of the altitudes."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Reflection in a circle.","Two taps to create a circle. Then see the image of the inversion in that circle of a point, a line and a tringle. Move mouse to see image move. Tap once to fix a point, twice to fix a line. Once line is fixed, moving mouse creates triangles and their images. Additional tap will reset."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Median perspective","Two taps to fix an edge with midpoint. Then see triangle with medians (line from vertex to midpoint) and centroid (intersection of medians)."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Incircle and excircles perspective.","Two taps to fix an edge. Then see triangle with angular bisectors. Their points of intersections are the incenter and excenters. Incircle and excircles are drawn with the incenter and excenters as center and radii equal to the distance from the centers to the sides of the triangle."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Triangle","Three non collinear points. Three vertices. Three edges. Click three times in the canvas to make a triangle."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Translation by a vector.","Two points to determine a translation vector. See the image of the current point under the translation defined by the selected translation vector. Tap once to fix a point, twice to fix a line. Once line is fixed, moving mouse creates triangles and their images. Additional tap will reset."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Euler line of a triangle.","The line from the circumcenter to the orthocenter."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Homothety with center and ratio k.","One point to determine center. See the images of a line segment for k in [-2 -1 -1/2 1/2 2]. Notice that the images of a line segment are parallel and the ratio of lengths is k. "], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Angular Bisector","Angle between two intersecting lines. Line that divides angle into equal parts. Loci of points equidistant from two lines."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Circle","Center and radius. Loci of points equidistant from one point. First click sets center and second click sets radius."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Perpndicular Bisector of a line segment.","The line through the midpoint and perpendicular to the line. Loci of points equidistant from two points. Make lines in the canvas and see the perpedicular bisector of it."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Line","A line is a vector of two points. Click two times in the canvas to make a line, first click to set first point and second click to set second point. A line has a midpoint and a perpendicular bisector. Two intersecting lines have an angle between them and angle bisectors."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Midpoint","The point on a line equidistant from the the endpoints."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Altitude perspective","Two taps to fix an edge. Then see the triangle with altitudes (line from vertex to opposite side, perpendicular to that side)) and the orthocenter (the intersection of altitudes)."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Rotation about a point.","One point to determine center. Default to a twentyfourth of a tau. See the twenty four images of current point."], null)]);

//# sourceMappingURL=definitions.js.map